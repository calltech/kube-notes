kubeadm allows us to upgrade our cluster components in the proper order, making sure to include important feature upgrades we might want to take advantage of in the latest stable version of Kubernertes. 

View the version of the server and client on the master node:
kubectl version --short

View the version of the scheduler and controller manager:
kubectl get pods -n kube-system kube-controller-manager-chadcrowell1c.mylabserver.com -o yaml

View the name of the kube-controller pod:
kubectl get pods -n kube-system

Set the VERSION variable to the latest stable release of Kubernetes:
export VERSION=$(curl -sSL https://dl.k8s.io/release/stable.txt)

Set the ARCH variable to the amd64 system:
export ARCH=amd64

View the latest stable version of Kubernetes using the variable:
echo $VERSION

Curl the latest stable version of Kubernetes:
curl -sSL https://dl.k8s.io/release/${VERSION}/bin/linux/${ARCH}/kubeadm > kubeadm

Install the latest version of kubeadm:
sudo install -o root -g root -m 0755 ./kubeadm /usr/bin/kubeadm

Check the version of kubeadm:
sudo kubeadm version

Plan the upgrade:
sudo kubeadm upgrade plan

Apply the upgrade to 1.13.3:
kubeadm upgrade apply v1.13.3

View the differences between the old and new manifests:
diff kube-controller-manager.yaml /etc/kubernetes/manifests/kube-controller-manager.yaml

Curl the latest version of kubelet:
curl -sSL https://dl.k8s.io/release/${VERSION}/bin/linux/${ARCH}/kubelet > kubelet

Install the latest version of kubelet:
sudo install -o root -g root -m 0755 ./kubelet /usr/bin/kubelet

Restart the kubelet service:
sudo systemctl restart kubelet.service

Watch the nodes as they change version:
kubect get nodes -w

